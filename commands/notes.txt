Loan-calculator
 - main.yml
 - production.yml
 - approval.yml


Used in loan-calculator?
YES----------------------------------------Makefile--Tests------------------------------------
FROM                    TO                 Target    docs   ALL-EVS   ONLY-REQ-EVS   MISSING-REQ-EVS
put_pipeline            declare_pipeline   yes       no     yes       N/A            no
create_release          log_approval       no        wip    yes       no             no
control_junit           log_test           no        no     no        no             no
put_artifact_image      log_artifact       yes       wip    yes       no             yes
create_deployment       log_deployment     yes       wip    yes       no             no
put_evidence            log_evidence       yes       wip    yes       no             no
nothing                 control_deployment no        wip    no        no             no
control_latest_release  retire
Not-------------------------------------------------------------------------------------------
control_junit          log_test_results    no         no        no             no
control_bitbucket_pr   log_bitbucket_pr    no         no        no             no
create_release         request_approval    no         no        no             no



Parked...

Remove Command suffix from command names.
Rename command abc base class as ABC?

CommandError should be named ChangeError.
And moved out of commands/ module to break cyclic dependencies

Some tests are producing output when they run.
eg tests/unit/test_m_log_approval.py

tests/unit/test_m_defaulted_env_var.py's 1st line is this:
from commands import CommandError # avoid cyclic dependency
Look into solving this cyclic-dependency properly.

Check when using pathed-filename to get sha for that
cdb and merkely behave the same regarding only showing
the basename of the pathed-filename.

Should create a source/ dir and move everything into it.

load_json() should be in context to allow easy stubbing.

Context() ctor should have keyword args.

Could look for unused env-vars starting with MERKELY_
and report warnings...

Command could start by printing list of environment variables and their type.

Print 'success' at end of successful command run?

Look into how Python recommended style for abstract-base-classes.

Mock fingerprinters code in tests/utils could be collapsed using
multiple inheritance.

Mock fingerprinters should print stack-trace if exception comes
through __exit__()

Commands should return the triple(method,url,payload)
and a 2nd step is to do the http get/post/put.
This would simplify the tests by not needing the
dry_run() everywhere.

As a general principle, for anything in a docstring,
consider whether it should be part of the living documentation.

Once living documentation is in place, warning/error messages can
include targeted urls.

properties/methods that exist in abstract-base-classes only to be
overridden are marked # pragma: no cover
Maybe add programmer-tests for these and remove the pragmas.